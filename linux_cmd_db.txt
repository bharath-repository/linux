1]general commands

pwd
cd
mv
ls
cp
rcp
scp
rm
date
id
man
watch
watch free –h                    ——————- –n –b –d 
su
sudo
w
who
whoami
groups                          ------- to see sudo groups
uptime                          ----- -p perrty view
iconv –l                        ————- list of computer’s know language


2]user account related / Admin task

finger <username>							>>> get info about user
useradd -m -s /bin/bash -G sudo knight              			>>> creating sudo account(user)
useradd
usermod -l [new-user-name] [existing-user-name]                   >>> To change login username (do it from root login)
usermod -d /home/[newly-created-username] -m [new username]       >>> To the existing home dir content to new dir
passwd <username>
groupadd
userdel
groupdel
groups <username>							>>> list user belongs which group
chmod
chown
getfacl
setfacl
umask                   ----  to set default file permission for new file which created in future
last                    ---- to see all login even logs
lastb                   --- to see most recent boot info
passwd –-ulock, –-lock, —expire


3]kernel commands

lsmod
insmod
rmmod
modprobe -r
modinfo

4]special characters

;  									>>>> OR function
&&									>>>> AND 
|									>>>> pipe the output to another command
&									>>>> to run the command background
>          ---- forward stdout override 
>>          ---- forward stdout append
2>
2>>         ---- forward stderr append
&>
&>>          ---- forward both stdin, stdout append
!
echo $$ or pgrep bash							>>> current running bash ps id
echo $#



5]search, info, read, write, view

find
find . -daystart -maxdepth 3 -iname "*.md"
find . -iname "*timer"
locate timer
getent passwd knight
getent group knight              >>> to find the word in a file > shows us the whole file
tee
ls | tee file.txt
history
lsof
locate
whichis
echo
file
diff
comm
stat <file_name>
type
which
nl
sort
uniq
paste
tr
sed
wc
less
more
head
tail
cat
vim
touch
mkdir
rmdir
vi
gedit
ln
ln -s <source_name> <target_name>      --- to create symbolic link
unlink                                 --- to remove the symbolic link
readlink -f /usr/sbin/init             --- to find actual hard file from all symbolic links 
zcat
cut
cut -d, -f2 test.txt            ----- cut command will do delimiter is , filter the column 2 from the file test.txt
cut -d, -f2 test.txt | sed -e “s/ //”     ---- pipe the output to sed then execute substitution space with nothing
cut -d, -f2 test.txt | sed -e “s/ //” | sort | uniq -c | sort -nr
paste
split
clear

grep
grep -wi "barath"							>>> w-whole word only 
sed
awk

6]networking

ping –a 8.8.8.8    >>>>> system will give us audio notification
ping –A 8.8.8.8    >>>> auto adjust ping rate per second —- stress test
ping –s 1450 8.8.8.8  >>>> to change sending payload size 
ping –f 8.8.8.8          >>>>> flood ping  
ping –i 3 8.8.8.8        >>>> send ping every 3 sec once 
ping –n 8.8.8.8          >>>> to avoid dns resolution 

traceroute –n 8.8.8.8   >>>> to trace without dns resolution 

sudo ip route add default via 10.2.64.1 dev wlp4s0 metric 90             >>>> to add default static route
sudo ip route add default via 10.2.64.1

sudo ip route del default via 192.168.0.1

netstat –na                >>> show active connection
netstat –nr                  >>> shows routing info


ss –tulpn              >>> 
netstat -na           >>> show active connection 
netstat -nr           >>> show kernel routing
ss -tulpn             >>> to list listening ports
ss -tuao              >>> list all tcp/udp sockets, "o" for timer 

To find layer 4 connectivity between two system in a same network
nc -l 1337            >>> Listen to this port 1337 >>>> this is system admin PC > 192.168.0.78
nc 192.168.0.78 1337  >>> sending cli text to admin PC from customer's PC > Crtl + c to exit from the screen
tcpdump
tcpflow
sudo tcpflow -c port 80    >>>>> Output to console > monitor port 80 only > if no port will monitor all traffic 
dig google.com

ping
netcat
nc -zv 

resolvectl status
resolvectl                    >>>> To see all the interface DNS alone

sudo ifconfig wlp4s0 down    >>>> to bring down a interface
sudo ifconfig wlp4s0 up      >>>> to bring up a interface


nmcli
nmcli dev show
nmcli dev show wlp4s0         >>>> To see interface ip,subnetmask,gateway,dns,mac,
nmcli con show Knight | grep -i ip4  —————————-Equivalent to ipconfig /all in windows
nmcli dev show wlp4s0
nmtui

netstat
netstat -tulnp								>>> show that tcp/udp/listening/port/process >>> simply list listening ports
netstat -na           >>> show active connection 
netstat -nr           >>> show kernel routing
ss -tulpn             >>> to list listening ports
ss -tuao              >>> list all tcp/udp sockets, "o" for timer 

To find layer 4 connectivity between two system in a same network
nc -l 1337            >>> Listen to this port 1337 >>>> this is system admin PC > 192.168.0.78
nc 192.168.0.78 1337  >>> sending cli text to admin PC from customer's PC > Crtl + c to exit from the screen

vnstat -l 1								>>> live bandwidth monitoring
traceroute        					             	>>> "-r" for routing table
nmap

tcpdump
tcpflow
sudo tcpflow -c port 80    >>>>> Output to console > monitor port 80 only > if no port will monitor all traffic 
dig google.com

dnsenume
host
host facebook.com
host –t AAAA facebook.com
A – Record meant for Ipv4 DNS server 
AAAA – Record meant for Ipv6 DNS server 
MX – Record meant for Mail DNS server 

strace


ip
ip a add 192.168.1.XXX/24 dev eth0
route
route add -net 10.10.10.0/24 gw 192.168.1.1
wget
crul
ifconfig
iwconfig
ifup
ifdown
iw
whois
whatweb
arp
sudo arp-scap --localnet                    >>> To list all connect device in a local subnet
sudo nmap 192.168.1.0/24                    >>> To list all connect device in a local subnet
telnet
scp
nslookup


lspci                                        >>>Find out your Linux wireless card chipset information
sudo lspci <-k|-v|-vv|-vvv>                  ### to see more info 
lspci -vv -s 04:00.0                        ###particular card id number from above command  && Find out Linux wireless card driver information
iwconfig                                    >>>How to configure a wireless network interface on Linux
nmcli connection show
nmcli dev show
nmcli connection show "Network"
iwconfig wlp4s0                              >>>How do I find out wifi link quality on Linux?
nmcli dev wifi                               *******>>>To find all the wifi network and more info in a place  ***********
sudo nmcli dev wifi connect "Knight" bssid 9A:C5:21:83:82:16   >>>>To connect to a particular AP's MAC address **********
sudo iw dev wlp4s0 scan | grep -E 'SSID|signal'                ******>>>>>>To see wifi signal strength in -dbm **************
sudo iw dev wlp4s0 scan | awk '/SSID:/ {print "SSID: " $0} /signal:/ {print "Signal: " $2 " dBm"}'      ******>>>>>>To see wifi signal strength in -dbm ****
sudo iw dev wlp4s0 scan                                           *** >>>>>>>>>>>>> To see all hide wifi details ***
watch -n 1 cat /proc/net/wireless            >>>See link quality continuously on screen
nmcli dev show wlp4s0                  ---------------- To see ipconfig /all interface ip address/gateway/mask/dns
route -n  or route                     ---------------- To see route print ---- routing table
iwconfig                               ---------------- To see wireless access point Mac/frequency band/signal strength/signal quality
nmcli dev wifi list                    ---------------- To see all available wifi signal at a place
nmcli device wifi connect Hypnotoad password MyPassword
nmcli device wifi connect Hypnotoad password MyPassword hidden yes       ----- to connect to hidden wifi from terminal ------
nmcli device wifi connect Hypnotoad password MyPassword ifname wlp4s0    ----- to connect to wifi from terminal-------


To check IP maximum packet size = from that we can conclude maximum L2 Frame size 
ping -M do -s 1472 8.8.8.8        *****To test MTU size. -M do (Don't Fragment) -s (Packet Size)*******max frame size (MTU + Ethernet Header (14 bytes) + Trailer (4 bytes) = 1500 + 14 + 4 = 1518 bytes.)
max ip packet size (Example: If 1472 bytes payload works but 1473 fails, the MTU is 1472 payload + 28 ip header = 1500 bytes max MTU)



tcpdump                                               >>>> packet sniffing and analysis tools
tshark
ngrep
netstat                                                >>>network stack querying tools
ss
tracepath                                              >>>> routing path dicovery tools
mtr
traceroute
bmon                                                   >>>>network interface bandwidth usage monitoring tools
vnstat
cbm
slurm
nload
sar
iperf                                                 >>> bidirectional bandwidth estimation tools
netperf
speedtest-cli
ping                                                   >>>network delay measurement & query tools
nping
hping
tcpping
iftop                                                  >>>> flow level bandwidth monitoring tools
iptraf
tcptrack
dig                                                    >>> dns server querying tools
nslookup
ethtool                                                 >>>> nic config & query tools
ip                                                      >>> network config tools
ifconfig
lsof                                                    >>> layer 4 port usage monitor
sudo lsof -i -nP
nethogs                                                 >>>process level bandwidth usage monitoring tools
bandwhich



7]performance

htop
top                     —————— ? q M t k
top , press r – enter the process id , enter the nice value from [-20 to 19]
renice –n 15 7859   —— will change the priority to 15 for process id 7859
sudo nice –n -10 ls – will get new nice of -10 higher priority with sudo 


glancesq
nmon
top
nice
renice
ps
free -h								>>> h human readable format
free -h -s 2 -c 5						>>> s/c ===> 2 sec refresh rate, generate only 5 reports
vmstat

mpstat -P ALL 3							>>> 3 refresh rate all ical core details
mpstat <refresh-rate> <how-many report>
mpstat 3 10								>>> here 3 sec refresh rate 10 time report will be generate
mpstat 5								>>> generate report every 5 sec contineously 

iotop -o -u knight							>>> sort by actually doing read/write process of your system,"u" >> user  
iotop -a								>>> sort by max% read/write using process
iotop -P								>>> process
iotop -d 5								>>> iterate in 5 sec delay

8]cpu frequency vs power 

powertop
cpupower
watch grep \"cpu MHz\" /proc/cpuinfo
watch -n 5 -c "cat /proc/cpuinfo | grep MHz"   >>> to only see the cpu operational frequest 
s-tui  								>>> computer stress test >>> performance test
tlp-stat
cpufrequtils
powertop
apt install indicator-cpufreq && reboot                		>>> only for ubuntu distro
cpufreq-set -r -g performance
cpufreq-set -r -g powersave


9]services

systemctl
timedatectl
tzselect
xclock -update 1
init
ldconfig								>>> shared library configuration

10]Remote system & Network device console in & putty 


sudo dmesg | grep -i tty              >>>> To find which com port to connect to
sudo screen /dev/ttyUSB0              >>>> To connect to a network device using console
minicom –s                            >>>> To network device like putty

screen
screen          – to create new session
ctrl-a , d        – to detach from session
screen –ls     – to list screen session
screen –r <session-id>   – to reattach session
ctrl-a , \          – to kill all session

tmux
ssh -X                                                          	>>> kind of a gui tools
ssh -oHostKeyAlgorithms=+ssh-rsa root@192.168.10.1
ssh -oHostKeyAlgorithms=+ssh-dss root@192.168.10.1

11]firewall & security

ufw
ufw allow 3386                                              		>>> means allow all incomming traffing to port 3386
ufw delete allow 3386                                          	>>> to delete the rule

iptables
iptables -S 								>>> to list all rules in the firewall

sestatus
fuser
ulimit
chage
passwd –-ulock, –-lock, —expire
find . –perm –u+s             >>> find file in current directory with file permission setuid and other permission
find . –perm u+s               >>> find file in current directory with file permission only setuid 
find / -perm -u+s -exec ls -l {} \;        >>> to execute output of a file into another command
sudo lsof -i              >>>>> list open files with related with internet connections
sudo fuser 22/tcp -v      >>>>> to see who is using this file with verbose 


ssh-keygen –R 192.168.70.2             >>> will remove ssh known host public key
ssh-keygen                                         >>> will create ssh key

ssh -L 9000:hckrnews.com:80 root@5.161.197.79
Remote Forwarding 
ssh -R 8000:localhost:80 root@5.161.197.79
ssh -R 0.0.0.0:8000:localhost:7777 192.168.70.2

gpg --gen-key
gpg --list-keys
gpg --export knight > knight.pub.key
gpg --export -a knight > knight.pub.key.asc      >>> to create the key in ascii format 

gpg --import knight.pub.key
vim letter.txt
gpg --output letter.txt.signed -a --sign letter.txt
gpg --output letter.txt.signed --clearsign letter.txt
gpg --verify letter.txt.signed

gpg --output myletter --verify letter.txt.signed

gpg --- key revoke
gpg-agent


12]filesystem, harddisk, mount points

udevadm monitor
lsblk
blkid

mkfs
mkfs.ext4 /dev/sdb
mkfs -t ext4 /dev/sdb -L knight					>>> To set label for partition here knight is label for partition /dev/sdb
mkfs -t xfs /dev/sdb
mkfs -t ntfs /dev/sdb							>>> NTFS >>> for windows operation system
mkfs -t vfat /dev/sdb 							>>> FAT32 >> default compatible with all devices
mkfs.vfat -F 32 /dev/sdb						>>> FAT32 >> default compatible with all devices

e2label /dev/sdb knight						>>  to set label
e2label /dev/sdb ""							>>  to remove label pass empty string as an argument

mkswap
swapon -all
swapoff
zramctl      --  zram is a kernel module that allows you to create a compressed block device in RAM. This can be used as swap or as a temporary filesyste

free -h
fdisk
gdisk
mount
umount
partprobe
dd                                                    >> Doing backup
dd if=/dev/zero of=/tmp/text count=1024 bs=1024 
dd if=/dev/sda of=/tmp/backup.dd bs=4096              >> Backup hard drive space and save it in backup.dd
dd if=/tmp/backup.dd  if=/dev/sda  bs=4096            >> To restore the backup
dd if=ubuntu.iso of=/dev/sdc bs=2048                  >> To make bootable USB

df
sudo df -h | grep nvm                     >>>  To view hard disk space utilized
du
sudo du -h -d 1 | sort -hr                >>> To list child directory size / sort by max file size


pvs
pvcreate
vgs
vgcreate
lvs
lvcreate
lvextend
lvreduce
vgremove
pvremove
pvdisplay
vgdisplay
lvdisplay


13]hardware / battery info

iostat -dx 5								>>> option "d/x/5"  display/extended statistics/5 secound refresh rate
lspci
lshw
lsblk
blkid
lsusb
lsins
lscpu
sensors
acpi -b             ---- to see battery remaining 

14]system log -logging

Log severity / Facility 
1.	Emergency / Panic
2.	Alert
3.	Critical
4.	Error
5.	Warning
6.	Notice 
7.	Info / Debug

dmesg
journalctl
journalctl --list-boots
journalctl -b <boot_id from previous command>
journalctl -b -1 --since "-1min"                 >>> see logs from the last minute of the previous boot
journalctl -b -1 -n 100                          >>> Tail the last 100 lines from the previous boot

journalctl -k                         		        	>>> for kernel buffer message
journalctl -f 						                           		>>> to fellow current logs
journalctl -r						                            		>>> show in reverse
journalctl -e 							                           	>>> go to end of the page 
journalctl -S today                              >>> to see today's log alone
journalctl --since "-10 minutes" --until "-5 minutes"   >>>> show you log between last 10mins to last 5mins
journalctl --since "10 minutes ago"              >>> show you last 10mins of log
journalctl -xe                                   >>> to see most recent log
journalctl -u plocate-updatedb.service -n 50     >>> last time service running log
journalctl -u ssh -b 0                           >>> to see only ssh related entry for current boot session
journalctl -p err                                >>> to see error messages from log
journalctl status                                >>> to see status tree of process
journalctl --failed                              >>> to only see all failed process 

logger hi there                             >>> log this message into system log we can see @ (journactl -n 50)

ping 8.8.8.8 -c 5 > ping-$(date +'%Y-%m-%d-%H%-%M').txt                  >>>> create the log file name with current date/time 
nmcli dev show wlp4s0 > /tmp/ping-$(date +'%Y-%m-%d-%H-%M-%S').txt       >>>> create a file in tmp directory and save the text resutls inside 



15]backups and zip

tar
tar -xvzf <name.tgz>							>>> tar archive Gnu zip files
gunzip
unzip <name.zip>

16]process

ps
ps -aux
ps -ef
ps -aux --forest | grep brave						>>> to see process in tree view
ps -aux | grep -Evwi "root|Knight"					>>> E-multiple string, v-invert search,w-to match whole words only, i-case insensitive
ps -aux | grep -iw "knight"
ps -aux | grep -iw "root"
ps -eo pid,ppid,%mem,cmd,%cpu --sort=-%cpu | head -n 10		>>> top 10 cpu using process
ps -eo pid,ppid,%cpu,cmd,%mem --sort=-%mem | head -n 10		>>> top 10 memory using process
pstree
pgrep ping | xargs kill   ——— pgrep will provide the process ID and xargs kill will kill all those process id
kill -15 <pid>								>>> terminate the process give some time to save the status
kill -9 <pid>								>>> force to stop immediate/ usaved process will be lost
pkill
killall -15 python
pgrep
jobs									>>> list the jobs
fg <job id>
bg <job id>
ctrl+c									>>> kill the process/job
ctrl+z									>>> stop the job

17]start/stop system 

shutdown
reboot
init


18]system statistics

sestatus
mailstatus -p

dstat 3 3
dstat 
📈️dstat -lcndmprs --cpufreq

mpstat
nmon

netstat
ifstat
iftop
cbn
iperf -s
| Command                      | Measures                   |
| ---------------------------- | -------------------------- |
| `iperf3 -c <server>`         | Upload (client → server)   |
| `iperf3 -c <server> -R`      | Download (server → client) |
| `iperf3 -c <server> --bidir` | Both upload and download   |
 iperf3 -c 89.187.162.1 -R
iptraf
wavemon
bmon
bmon -p wlp2s0 -o curses
nethogs
nload
vnstat -l 1                        					>>>> live traffic rate 

iostat -d								>>>> only show device report
iostat -c								>>>> only show cpu report
iostat -h 2 5								>>>> h human readable format, 2 sec refresh rate, generate 5 times this reports 
iostat -t -p sda							>>>> t for timestamp, p show only sda block device

vmstat
tlp-stat
stat <file_name>
atop


19]messaging 

wall
mail
mailstatus -p
write user <tty>

20]scheduling jobs

at
atq                                              ----- to see the job queue 
atrm                                             ----- to delete the job from the queue

at now + 5 min                                   ------ will run the below command in 5mins
>ping 8.8.8.8 -c 5 > /tmp/testping.txt           ------ do ping and send output to /tmp
ctrl +d                                          ------ exist from the editor

crontab
crontab -l
crontab -u knight -e


21]install package management

Debian/Ubuntu
apt
apt-get
aptitude
apt-cache show <command_name or package_name>				>>> show package deteails and dependencies 
aptitude show <command_name or package_name>
apt list --installed | grep -i "\[installed\]"			>>> list installed packages
apt list --installed | grep -i "automatic"       			>>> list automatic/dependency package 
apt list --upgradeable							>>> all upgradeable packages
apt list depends <package_name>
apt-cache show <package-name>
apt info <package-name>
apt-cache search <package-name>
apt remove <package-name> 						>>> removes package binary files alone
apt purge <package-name>						>>> remove configuration/binary 
apt autoremove <package-name>						>>> delete dependency of that package-name

snap
dpkg
dpkg -l								>>> list all installed packages
dpkg -i --force <name.deb>						>>> install without dependency
dpkg -r <name.deb>							>>> remove package
dpkg -I <name.deb>							>>> info about the name.deb
dpkg -L <name.deb>							>>> list installed package and it's contents
dpkg-reconfigure <package_name>

RedHat/Centos/Fedora
yum
/etc/yum.conf  - /etc/yum.repos.d/
yum update
yum upgrade -y
yum info emacs
yum provides /bin/bash
yum localinstall
yum groupinstall
yum check-update
yum deplist tmux         -----     dependency list 
yum history                     -------   show you installed packages
yum upgrade ‘cal*’        ------- upgrade all under cal 
yumdowndloader –resolve bzr  ---------------- to download rpm package

rpm ---- options below
-i  ----to install
-e  ----to remove
-U  ----to upgrade
-q  ----to query
-F  ----only update if its already installed
-V  ----check the integritity of the installation
-K  ----check the integritity of the rpm package 

Fedora
sudo dnf update                  ---- Update system	
sudo dnf upgrade <package>       ---- Upgrade a package	
sudo dnf install <package>       ---- Install a package	
sudo dnf remove <package>        ---- Remove a package	
dnf search <keyword>             ---- Search for a package	
dnf info <package>               ---- Get info about a package	
dnf list installed               ---- List installed packages	
dnf list available               ---- List available packages	
sudo dnf clean all               ---- Clean cache	
sudo dnf repolist                ---- Manage repositories	
dnf check-update                 ---- Check for updates	
sudo dnf downgrade <package>     ---- Downgrade a package	
sudo dnf history                 ---- History of transactions	
sudo dnf history rollback <ID>   ---- Rollback to previous state
sudo dnf config-manager --set-enabled <repo>       ------ Enable a repository	
sudo dnf config-manager --set-disabled <repo>      ------ Disable a repository	

Suse OS
zypper 
man zypper 
zypper se tmux  ----------------- search for tmux 

Arch Linux
sudo pacman -S pciutils

Windows
wine

22]devlopment tools

gcc
nano
gedit
vim
nvm
npm
nodejs
java
python3.8
pip3
mongo
mysql
postgresql
git
grive
grive-tools

23]grub, bios, uefi

grub-install
update-grub
grub-mkconfig


24]gathering info about a command 

man <command_name>
whatis <command_name>
whereis <command_name>
which <command_name>
<command_name> --help


25] OS info

uname -a
hostnamectl
lsb_release -a


26] important graphical softwares

owasp-zap
burpsuite
firefox-foxyproxy
chrome
brave-browser
gnome-tweak-tool
gedit
libreoffice
fbreader
vlc
gufw
deluge
mongo-compass
mysql-workbeanch
chrome-postman
vscode
pycharm
virtualbox

grive-tools			>>> google drive & linux local directory synchronization software
steam				>>> gaming software
joplin				>>> educational notes taking sofrware
GIMP				>>> software for photo editing
nitroshare 			>>> file sharing between all type of device eg: mobile
synaptic   			>>> graphical package manager
stacer				<<<<<  Stacer : https://github.com/oguzhaninan/Stacer >>  Linux System Optimizer & Monitoring.
timeshift 	 		<<<<<  snapshot & backup restoration of you entire system >> https://www.youtube.com/watch?v=ShW7N...

27] Time and date

timedatectl
tzselect                        >>>> Interactive way to select timezone
timedatectl list-timezones						>>>>	list all timezones
timedatectl set-timezone "Asia/Kolkata"
systemctl start ntp							>>>>	auto update time from internet ntp server
ntpdate
ntp
ntpq –p

chronyc help
chronyc tracking
chronyc activity

hwclock
hwclock -w								>>>>>	to set system clock to hardware clock

date
date +%Y-%m-%d_%r      >>> to select date field manually 
time

29] Remote desktop login sequence

sudo aptitude show xrdp
sudo systemctl status xrdp
sudo ufw allow from any to any port 3389 proto tcp
ip -c a
**Must logout from ubuntu GUI**
finally use windows pc to remote desktop connection app to login to ubuntu

Disable Suspend on Lid Close (CLI)
sudo nano /etc/systemd/logind.conf > HandleLidSwitch=ignore > laptop/battery will run when we close the lid
sudo nano /etc/systemd/logind.conf > HandleLidSwitchExternalPower=ignore > laptop/charging will run when we close the lid
sudo nano /etc/systemd/logind.conf > HandleLidSwitch=suspend > laptop will sleep when we close the lid
sudo systemctl reload-or-restart systemd-logind >>> will make the change effective.

30] Encryption / Hashing 

sudo apt install hashalot     ---- package will install below hashing commands
md5sum
sha256sum test.txt           ----- faster
sha512sum test.txt          ------ better 

31] Compression & Archiving

Compression = gzip & bzip2 & xz
gzip test.txt
gunzip test.txt.gz
file test.txt
bzip2 test.txt
bunzip2 test.txt.bz2
xz test.txt
unxz test.txt.xz
Archiving = tar & cpio
tar-cfz backup.tar.gz test1.txt test2.txt test3.txt
tar -xfv backup.tar.gz
tar –list -f backup.tar.gz

zless                                                        >>> can do less in compressed file
zcat                                                         >>> can do cat in compressed file


32] Systemd 

systemctl status application.service                                                  ----- to see status 
systemctl show sshd.service
sudo systemctl start application.service                                              ----- to start
sudo systemctl stop application.service                                               ----- to stop
sudo systemctl restart application.service                                            ----- to restart
sudo systemctl reload application.service                                             ----- to reload or append the new config
sudo systemctl reload-or-restart application.service                                  ------
sudo systemctl daemon-reload                                                          ------ 
systemctl list-timers

sudo systemctl enable application.service
sudo systemctl disable application.service

systemctl list-units
systemctl list-unit-files
systemctl list-units --all
systemctl list-units --all --state=inactive
systemctl list-units --type=service

systemctl cat atd.service                                                             ---- to see service config
systemctl list-dependencies sshd.service                                              ---- to see service dependencies

sudo systemctl mask nginx.service                                                     ---- to block a service 
sudo systemctl unmask nginx.service

systemctl get-default                                                                 ---- to get default runlevel
sudo systemctl set-default graphical.target                                           ---- to set default runlevel

sudo systemctl rescue
sudo systemctl halt
sudo systemctl poweroff
sudo systemctl reboot
sudo reboot

33] Shell scripting / Bash scripting
stdin     --------   stream 0
stdout     --------   stream 1
stderr      --------   stream 2
echo $0                          >>>> to confirm the shell status / to check what shell is in use login/interactive 
echo $?                >>>> always display return value of the previous command === if the command executed successfully it will give 0 === if the command executed with error it will return 1 

bash, zsh, dash, ksh, csh
echo $BASH
echo $SHELL
echo $SHELL
echo $HOSTNAME
echo $USER
echo $TERM
echo $PATH
echo $$
echo $#
;           >>> run the first command and run the second command it is a separator 
||          >>> logical or function
&&          >>> logical and function


bash
unset
set
exports
exec ping 8.8.8.8                      >>>>>>>>> this command will close the shell automatically after the ping completed 
ping 8.8.8.8 -c 5 > ping-$(date +'%Y-%m-%d-%H%-%M').txt
echo $?                >>>> always display return value of the previous command === if the command executed successfully it will give 0 === if the command executed with error it will return 1 
read                   >>>> will receive the input and store the value in variables



-----------------------------------------------------------------------------------
#!/bin/bash or #!/bin/sh or #!/usr/bin/python3
#!/bin/bash
echo “starting of code”
cd /tmp
touch $(date +%Y-%m-%d-%H-%M)-$1                     ####this line willl create the file name with date and time of the file creation 
touch $2
ls -lrth
echo “ending of code”
######Here the $1 represents first parameter which is give when the code is execute 
knight@knight:/tmp$ ./test99.sh newfile1.txt newfile2.txt
-----------------------------------------------------------------------------------------







